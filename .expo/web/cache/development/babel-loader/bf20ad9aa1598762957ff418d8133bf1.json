{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\ne nyuk\\xE1lj\\\\ELTE\\\\mobil\\\\DiceRoller\\\\src\\\\DieRollScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nvar dieNumber = 0;\nvar drop = 0;\n\nvar DieRollScreen = function (_Component) {\n  _inherits(DieRollScreen, _Component);\n\n  var _super = _createSuper(DieRollScreen);\n\n  function DieRollScreen() {\n    _classCallCheck(this, DieRollScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DieRollScreen, [{\n    key: \"render\",\n    value: function render() {\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInputStyle,\n        numeric: true,\n        placeholder: \"number of dice\",\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          return dieNumber = text;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }), React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInputStyle,\n        numeric: true,\n        placeholder: \"dropped dice\",\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          return drop = text;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }), React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"size of the die\"), React.createElement(Button, {\n        title: \"d4\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(4));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"d6\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(6));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 10\n        }\n      }), React.createElement(Button, {\n        title: \"d10\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(10));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 10\n        }\n      }), React.createElement(Button, {\n        title: \"d12\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(12));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 10\n        }\n      }), React.createElement(Button, {\n        title: \"d20\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(20));\n        },\n        color: \"#2b1d0e\",\n        containerViewStyle: {\n          width: '100%',\n          marginLeft: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }), React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 10\n        }\n      }), React.createElement(Button, {\n        title: \"d100\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(100));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 8\n        }\n      }));\n    }\n  }]);\n\n  return DieRollScreen;\n}(Component);\n\nDieRollScreen.navigationOptions = {\n  title: 'DieRoll'\n};\nexport { DieRollScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FDF1DC',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textInputStyle: {\n    width: 250,\n    backgroundColor: 'white',\n    padding: 16\n  },\n  buttonStyle: {\n    margin: '10px'\n  }\n});\n\nfunction dieRollFunction(dieSize) {\n  var rolls = [];\n\n  for (var i = 0; i < dieNumber; i++) {\n    rolls.push(Math.floor(Math.random() * dieSize) + 1);\n  }\n\n  rolls.sort(function (a, b) {\n    return a - b;\n  });\n  rolls.slice(0, drop);\n  var text = rols[0];\n\n  for (var _i = 1; _i < dieNumber; _i++) {\n    text += rolls[_i];\n\n    if (_i < dieNumber - 1) {\n      text += '+';\n    }\n  }\n\n  var result = 0;\n  rolls.forEach(function (element) {\n    result += parseInt(element);\n  });\n  return \"Result of the rolls:\" + text + '=' + result;\n}","map":{"version":3,"sources":["D:/ne nyukÃ¡lj/ELTE/mobil/DiceRoller/src/DieRollScreen.js"],"names":["React","Component","dieNumber","drop","DieRollScreen","navigate","props","navigation","styles","container","textInputStyle","text","alert","dieRollFunction","width","marginLeft","navigationOptions","title","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","buttonStyle","margin","dieSize","rolls","i","push","Math","floor","random","sort","a","b","slice","rols","result","forEach","element","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, View, StyleSheet, TextInput  } from \"react-native\";\n\nlet dieNumber=0;\nlet drop=0;\n\nexport default class DieRollScreen extends Component {\n    static navigationOptions = {\n      title: 'DieRoll',\n    };\n    render() {\n      const {navigate} = this.props.navigation;\n      return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.textInputStyle}\n          numeric\n          placeholder=\"number of dice\"\n          keyboardType={'numeric'}\n          onChangeText={text => dieNumber=text}\n        />\n        <p></p>\n        <TextInput\n          style={styles.textInputStyle}\n          numeric\n          placeholder=\"dropped dice\"\n          keyboardType={'numeric'}\n          onChangeText={text => drop=text}\n        />\n        <p>size of the die</p>\n        <Button\n            title=\"d4\"\n            onPress={() => alert(dieRollFunction(4))}\n            color=\"#2b1d0e\"\n        />\n        <p></p>\n        <Button\n            title=\"d6\"\n            onPress={() => alert(dieRollFunction(6))}\n            color=\"#2b1d0e\"\n        />\n         <p></p>\n        <Button\n            title=\"d10\"\n            onPress={() => alert(dieRollFunction(10))}\n            color=\"#2b1d0e\"\n        />\n         <p></p>\n        <Button\n            title=\"d12\"\n            onPress={() => alert(dieRollFunction(12))}\n            color=\"#2b1d0e\"\n        />\n         <p></p>\n        <Button\n            title=\"d20\"\n            onPress={() => alert(dieRollFunction(20))}\n            color=\"#2b1d0e\"\n            containerViewStyle={{width: '100%', marginLeft: 0}}\n        />\n         <p></p>\n       <Button\n            title=\"d100\"\n            onPress={() => alert(dieRollFunction(100))}\n            color=\"#2b1d0e\"\n        />\n      </View>\n      );\n    }\n  }\n\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#FDF1DC',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    textInputStyle: {\n      width: 250,\n      backgroundColor: 'white',\n      padding: 16,\n      \n    },\n    buttonStyle:{\n      margin: '10px'\n    }\n  });\n\n  function dieRollFunction(dieSize) {\n    let rolls = []\n    for(let i=0; i<dieNumber; i++)\n    {\n      rolls.push(Math.floor(Math.random() * dieSize)+1)\n      \n    }\n    rolls.sort((a, b) => a - b);\n    rolls.slice(0,drop);\n    let text=rols[0];\n    for(let i=1; i<dieNumber; i++)\n    {\n      text+=rolls[i]  \n      if(i<dieNumber-1)\n      {\n        text+='+'\n      }\n    }\n    \n    let result=0;\n    rolls.forEach(element => {\n      result+=parseInt(element);\n    });\n    return \"Result of the rolls:\"+text+'='+result;\n  }"]},"metadata":{},"sourceType":"module"}