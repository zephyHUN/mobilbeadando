{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\ne nyuk\\xE1lj\\\\ELTE\\\\mobil\\\\DiceRoller\\\\src\\\\DieRollScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nvar x = 0;\n\nvar DieRollScreen = function (_Component) {\n  _inherits(DieRollScreen, _Component);\n\n  var _super = _createSuper(DieRollScreen);\n\n  function DieRollScreen() {\n    _classCallCheck(this, DieRollScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DieRollScreen, [{\n    key: \"render\",\n    value: function render() {\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInputStyle,\n        numeric: true,\n        placeholder: \"number of dies\",\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          return x = text;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }), React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, \"kocka m\\xE9rete\"), React.createElement(Button, {\n        title: \"d4\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(x, 4));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"d6\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(x, 6));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"d10\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(x, 10));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"d12\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(x, 12));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"d20\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(x, 20));\n        },\n        color: \"#2b1d0e\",\n        containerViewStyle: {\n          width: '100%',\n          marginLeft: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"d100\",\n        onPress: function onPress() {\n          return alert(dieRollFunction(x, 100));\n        },\n        color: \"#2b1d0e\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }\n      }));\n    }\n  }]);\n\n  return DieRollScreen;\n}(Component);\n\nDieRollScreen.navigationOptions = {\n  title: 'Profile'\n};\nexport { DieRollScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FDF1DC',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textInputStyle: {\n    width: 250,\n    backgroundColor: 'white',\n    padding: 16\n  }\n});\n\nfunction dieRollFunction(dieNumber, dieSize) {\n  var rolls = [];\n  var text = '';\n\n  for (var i = 0; i < dieNumber; i++) {\n    rolls.push(Math.floor(Math.random() * dieSize) + 1);\n    text += rolls[i];\n\n    if (i < dieNumber - 1) {\n      text += '+';\n    }\n  }\n\n  var result = 0;\n  rolls.forEach(function (element) {\n    result += parseInt(element);\n  });\n  return \"Result of the rolls:\" + text + '=' + result;\n}","map":{"version":3,"sources":["D:/ne nyukÃ¡lj/ELTE/mobil/DiceRoller/src/DieRollScreen.js"],"names":["React","Component","x","DieRollScreen","navigate","props","navigation","styles","container","textInputStyle","text","alert","dieRollFunction","width","marginLeft","navigationOptions","title","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","dieNumber","dieSize","rolls","i","push","Math","floor","random","result","forEach","element","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, View, StyleSheet, TextInput  } from \"react-native\";\n\nlet x=0;\n\nexport default class DieRollScreen extends Component {\n    static navigationOptions = {\n      title: 'Profile',\n    };\n    render() {\n      const {navigate} = this.props.navigation;\n      return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.textInputStyle}\n          numeric\n          placeholder=\"number of dies\"\n          keyboardType={'numeric'}\n          onChangeText={text => x=text}\n        />\n        <p>kocka mÃ©rete</p>\n        <Button\n            title=\"d4\"\n            onPress={() => alert(dieRollFunction(x,4))}\n            color=\"#2b1d0e\"\n        />\n        <br></br>\n        <Button\n            title=\"d6\"\n            onPress={() => alert(dieRollFunction(x,6))}\n            color=\"#2b1d0e\"\n        />\n        <br></br>\n        <Button\n            title=\"d10\"\n            onPress={() => alert(dieRollFunction(x,10))}\n            color=\"#2b1d0e\"\n        />\n        <Button\n            title=\"d12\"\n            onPress={() => alert(dieRollFunction(x,12))}\n            color=\"#2b1d0e\"\n        />\n        <Button\n            title=\"d20\"\n            onPress={() => alert(dieRollFunction(x,20))}\n            color=\"#2b1d0e\"\n            containerViewStyle={{width: '100%', marginLeft: 0}}\n        />\n       <Button\n            title=\"d100\"\n            onPress={() => alert(dieRollFunction(x,100))}\n            color=\"#2b1d0e\"\n        />\n      </View>\n      );\n    }\n  }\n\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#FDF1DC',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    textInputStyle: {\n      width: 250,\n      backgroundColor: 'white',\n      padding: 16,\n      \n    },\n  });\n\n  function dieRollFunction(dieNumber, dieSize) {\n    let rolls = []\n    let text=''\n    for(let i=0; i<dieNumber; i++)\n    {\n      rolls.push(Math.floor(Math.random() * dieSize)+1)\n      text+=rolls[i]\n      if(i<dieNumber-1)\n      {\n        text+='+'\n      }\n    }\n    let result=0;\n    rolls.forEach(element => {\n      result+=parseInt(element);\n    });\n    return \"Result of the rolls:\"+text+'='+result;\n  }"]},"metadata":{},"sourceType":"module"}